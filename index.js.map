{"mappings":"uBACAA,QAAQC,YAAa,qBCC8F,IACzF,SAAUC,GAChC,IAAIC,EAAeC,OAAOC,QAAUD,OAAOE,YAI3C,OAHgBJ,EAAIK,cACGH,OAAOI,YAAcN,EAAIO,wBAAwBC,KACnBP,KAIxC,SAAUD,EAAKS,QACR,IAAhBA,IAA0BA,EAAc,uBAC5CT,EAAIU,MAAMC,OAAS,KACnB,IAAK,IAAIC,EAAIZ,EAAIa,UAAUC,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAChD,IAAIG,EAAYf,EAAIa,UAAUD,GAC1BG,EAAUC,WAAWP,IACrBT,EAAIa,UAAUI,OAAOF,OAKhB,CACbG,OAAQ,+BACRC,kBAAmB,gCACnBC,aAAc,6BACdC,SAAU,gCACVC,WAAY,kCACZC,WAAY,oCACZC,iBAAkB,kCAED,SAAUC,EAAYzB,GACvC0B,EAAmB1B,GACnBA,EAAIa,UAAUc,IAAIF,MAGJ,SAAUzB,GACxB,IAAI4B,EAAO5B,EAAIO,wBAAwBqB,KAGvC,MAAO,CACHC,MAAOD,EACPE,SAHMF,EADO5B,EAAI+B,cAAcxB,wBAAwBqB,ODlC/D,IAEII,EAFAC,EAASC,SAASC,cAAc,2BAChCC,EAASH,EAAOF,cAEhBM,GAAa,EACbC,EAAgBC,EAAoBN,KAChB,WACpB,IAAIO,EAAeP,EAAO5B,aAEtBoC,EAAeL,EAAO/B,aAGtBqC,EAAgBxC,OAAOyC,iBAAiBV,GAAQW,SAgBpD,GAfqB,SAAjBF,EACAT,EAAOvB,MAAMkB,KAAOU,EAAcT,MAAQ,KAEpB,YAAjBa,IACLT,EAAOvB,MAAMkB,KAAOU,EAAcR,SAAW,MAE7Ce,EAA4BZ,KAC5Ba,EAAuBC,EAAe5B,kBAAmBc,GACrDD,IACAK,GAAa,IAEjBQ,EAA4BT,IAC5BU,EAAuBC,EAAe3B,aAAca,IAGnDY,EAA4BZ,IAAWD,IAAoBK,EAAY,CACxE,IAEIW,EAFaP,EAAeD,GACJP,EAAO1B,wBAAwBC,IAAM4B,EAAO7B,wBAAwBC,KAEhGsC,EAAuBC,EAAe1B,SAAUY,GAChDA,EAAOvB,MAAMC,OAASqC,EAAmB,KACzCX,GAAa,EAGjB,IAAKL,GAAmBC,EAAOpB,UAAUoC,SAAS,uCAAyCZ,EAAY,CAG/FW,EAFaP,EAAeD,GACJP,EAAO1B,wBAAwBC,IAAM4B,EAAO7B,wBAAwBC,KAEhGsC,EAAuBC,EAAezB,WAAYW,GAClDA,EAAOvB,MAAMC,OAASqC,EAAmB,KACzCX,GAAa,EAEZL,IACDK,GAAa,GAEbJ,EAAO1B,wBAAwBC,IAAM,GAAKwB,GAC1Cc,EAAuBC,EAAexB,WAAYU,GAElDG,EAAO7B,wBAAwBC,IAAM,GACrCsC,EAAuBC,EAAe7B,OAAQe,GAElD/B,OAAOgD,SAAW,WAEdlB,EAAkBmB,KAAKC,UAAYD,KAAKhD,QACxCgD,KAAKC,UAAYD,KAAKhD,UAG9BL,QAAA,QAAAuD","sources":["./src/main.js","./src/utils/index.js"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar utils_1 = require(\"./utils\");\nrequire(\"./index.css\");\nvar target = document.querySelector('.js-sticky-scroll-catch');\nvar parent = target.parentElement;\nvar scrollDirection;\nvar isCatchPos = false;\nvar targetLeftPos = utils_1.calcLeftPos(target);\nvar stickyScrollCatch = function () {\n    var targetHeight = target.offsetHeight;\n    // let targetWidth: number = target.offsetWidth\n    var parentHeight = parent.offsetHeight;\n    // let parentWidth: number = parent.offsetWidth\n    // handle x axis positioning\n    var targetPosAttr = window.getComputedStyle(target).position;\n    if (targetPosAttr == 'fixed') {\n        target.style.left = targetLeftPos.fixed + \"px\";\n    }\n    else if (targetPosAttr == 'absolute') {\n        target.style.left = targetLeftPos.absolute + \"px\";\n    }\n    if (utils_1.isElmScrolledBottom(target)) {\n        utils_1.setActiveState(utils_1.STATES.SCROLL_DOWN_CATCH, target);\n        if (scrollDirection)\n            isCatchPos = true;\n    }\n    if (utils_1.isElmScrolledBottom(parent)) {\n        utils_1.setActiveState(utils_1.STATES.SCROLL_BREAK, target);\n    }\n    // handle scroll up and 'catch' so scrolls with window\n    if (!utils_1.isElmScrolledBottom(target) && scrollDirection && !isCatchPos) {\n        var YAxisSpace = parentHeight - targetHeight;\n        var topDistanceFromParent = target.getBoundingClientRect().top - parent.getBoundingClientRect().top;\n        var bottomYAxisSpace = YAxisSpace - topDistanceFromParent;\n        utils_1.setActiveState(utils_1.STATES.UPSCROLL, target);\n        target.style.bottom = bottomYAxisSpace + \"px\";\n        isCatchPos = true;\n    }\n    // handle scroll up and 'catch' so scrolls with window DOWNSCROLL catch\n    if (!scrollDirection && target.classList.contains('sticky-scroll-catch--scrolled-top') && !isCatchPos) {\n        var YAxisSpace = parentHeight - targetHeight;\n        var topDistanceFromParent = target.getBoundingClientRect().top - parent.getBoundingClientRect().top;\n        var bottomYAxisSpace = YAxisSpace - topDistanceFromParent;\n        utils_1.setActiveState(utils_1.STATES.DOWNSCROLL, target);\n        target.style.bottom = bottomYAxisSpace + \"px\";\n        isCatchPos = true;\n    }\n    if (!scrollDirection)\n        isCatchPos = false;\n    // fix to top\n    if (target.getBoundingClientRect().top > 0 && scrollDirection) {\n        utils_1.setActiveState(utils_1.STATES.SCROLL_TOP, target);\n    }\n    if (parent.getBoundingClientRect().top > 0) {\n        utils_1.setActiveState(utils_1.STATES.INITAL, target);\n    }\n    window.onscroll = function () {\n        // print \"false\" if direction is down and \"true\" if up // creds IT VLOG https://stackoverflow.com/questions/31223341/detecting-scroll-direction\n        scrollDirection = this.oldScroll > this.scrollY;\n        this.oldScroll = this.scrollY;\n    };\n};\nexports[\"default\"] = stickyScrollCatch;\n","\"use strict\";\nexports.__esModule = true;\nexports.calcLeftPos = exports.setActiveState = exports.STATES = exports.resetStyle = exports.isElmScrolledBottom = void 0;\nvar isElmScrolledBottom = function (elm) {\n    var bottomScroll = window.scrollY + window.innerHeight;\n    var elmHeight = elm.offsetHeight;\n    var elmDistanceToTop = window.pageYOffset + elm.getBoundingClientRect().top;\n    var isScrolledToEnd = elmHeight + elmDistanceToTop < bottomScroll;\n    return isScrolledToEnd;\n};\nexports.isElmScrolledBottom = isElmScrolledBottom;\nvar resetStyle = function (elm, classPrefix) {\n    if (classPrefix === void 0) { classPrefix = 'sticky-scroll-catch'; }\n    elm.style.bottom = null;\n    for (var i = elm.classList.length - 1; i >= 0; i--) {\n        var className = elm.classList[i];\n        if (className.startsWith(classPrefix)) {\n            elm.classList.remove(className);\n        }\n    }\n};\nexports.resetStyle = resetStyle;\nexports.STATES = {\n    INITAL: 'sticky-scroll-catch--initial',\n    SCROLL_DOWN_CATCH: 'sticky-scroll-catch--scrolled',\n    SCROLL_BREAK: 'sticky-scroll-catch--break',\n    UPSCROLL: 'sticky-scroll-catch--upscroll',\n    DOWNSCROLL: 'sticky-scroll-catch--downscroll',\n    SCROLL_TOP: 'sticky-scroll-catch--scrolled-top',\n    SCROLL_TOP_BREAK: 'sticky-scroll-catch--initial'\n};\nvar setActiveState = function (classToAdd, elm) {\n    exports.resetStyle(elm);\n    elm.classList.add(classToAdd);\n};\nexports.setActiveState = setActiveState;\nvar calcLeftPos = function (elm) {\n    var left = elm.getBoundingClientRect().left;\n    var parentLeft = elm.parentElement.getBoundingClientRect().left;\n    var res = left - parentLeft;\n    return {\n        fixed: left,\n        absolute: res\n    };\n};\nexports.calcLeftPos = calcLeftPos;\n"],"names":["exports","__esModule","elm","bottomScroll","window","scrollY","innerHeight","offsetHeight","pageYOffset","getBoundingClientRect","top","classPrefix","style","bottom","i","classList","length","className","startsWith","remove","INITAL","SCROLL_DOWN_CATCH","SCROLL_BREAK","UPSCROLL","DOWNSCROLL","SCROLL_TOP","SCROLL_TOP_BREAK","classToAdd","$ebdb5319263a18d59505b336be3ac$export$resetStyle","add","left","fixed","absolute","parentElement","scrollDirection","target","document","querySelector","parent","isCatchPos","targetLeftPos","$ebdb5319263a18d59505b336be3ac$export$calcLeftPos","targetHeight","parentHeight","targetPosAttr","getComputedStyle","position","$ebdb5319263a18d59505b336be3ac$export$isElmScrolledBottom","$ebdb5319263a18d59505b336be3ac$export$setActiveState","$ebdb5319263a18d59505b336be3ac$export$STATES","bottomYAxisSpace","contains","onscroll","this","oldScroll","$d4bfe31f3c0d46c344a227222269e$export$default"],"version":3,"file":"index.js.map"}